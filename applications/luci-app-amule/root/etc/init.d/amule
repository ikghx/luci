#!/bin/sh /etc/rc.common
# Copyright (C) 2010-2015 OpenWrt.org

START=98
USE_PROCD=1


LIST_SEP="
"

unregex() {
   echo "$1" | sed -e 's/[]\/()$*.^|[]/\\&/g'
}

option_word_to_digit() {
    word=$(grep -ioE "\b$2=\S+" "$1"|awk -F= '{print $2}')
    digit=$(echo "$3" |grep -oE "$word/\S+"|awk -F'/' '{print $2}')
    sed -i "s/\b$2=$word\b/$2=$digit/g" "$1"
}

encrypt_password() {
	pass_notencryted=$(grep -ioE "\b$2=[^\n]+" "$1"|sed "s/.*$2=//g")
	pass_encryted=$(echo -n $pass_notencryted|md5sum|grep -oE "[a-z0-9]{32}")
	[[ -z $pass_notencryted ]] || sed -i "s/\b$2=$(unregex $pass_notencryted)/$2=$pass_encryted/g" "$1"
}

write_dat_file() {
	if [[ -s "$1" ]] ; then
		cat "$1" > "$2"
	else
		[[ -s "$2" ]] && cat "$2" > "$1"
	fi
}

set_params() {
	cat /etc/amule/amule.conf.template > "$config_file"
	local p; local v; local s="$1"; shift
	for p in $*; do
		config_get v "$s" "$p"
		IFS="$LIST_SEP"
		for v in $v; do
			[ -n "$v" ] && (
				sed -i "s;|$(echo $p|tr '[a-z]' '[A-Z]'|sed -e 's|_||g')|;$(unregex $v);g" "$config_file"
			)
		done
		unset IFS
	done
	
	#delete unreplaced placeholders
	sed -i "s;=|[A-Z0-9]*|;=;g" "$config_file"
	
	#convert some options to digit
	option_word_to_digit "$config_file" "ProxyType" "socks5/0 socks4/1 http/2 socks4a/3"
	option_word_to_digit "$config_file" "SeeShare" "anyone/0 friends/1 nobody/2"
	
	#encrypt password
	encrypt_password "$config_file" "ECPassword"
	encrypt_password "$config_file" "Password"
	encrypt_password "$config_file" "PasswordLow"
}

_make_dir() {
	local d
	for d in "$@"; do
		if [ ! -d "$d" ]; then
			mkdir -p "$d" 2>/dev/null || return 1
		fi
	done

	return 0
}

_reset_dir_mode() {
	local d
	for d in "$@"; do
		if [ -d "$d" ]; then
			find "$d" -type d -exec chmod 755 {} \; 2>/dev/null
			find "$d" -type f -exec chmod 644 {} \; 2>/dev/null
		fi
	done
}

_change_owner() {
	local u="$1"; shift

	local d
	for d in "$@"; do
		if [ -f "$d" ]; then
			chown "$u" "$d" 2>/dev/null || return 1
		elif [ -d "$d" ]; then
			chown -R "$u" "$d" 2>/dev/null || return 1
		fi
	done

	return 0
}

amule_start() {
	local cfg="$1"

	local user
	local incoming_dir config_dir temp_dir
	local mem_percentage
	local config_overwrite nice ionice_flags
	local cmdline
	local enabled

	config_get_bool enabled "$cfg" 'enabled' 0
	[ $enabled -gt 0 ] || return 1

	config_get config_dir "$cfg" 'config_dir' '/var/run/amule'
	config_get user "$cfg" 'user' 'daemon'
	config_get incoming_dir "$cfg" 'incoming_dir' "$config_dir/Incoming"
	config_get temp_dir "$cfg" 'temp_dir' "$config_dir/Temp"
	config_get mem_percentage "$cfg" 'mem_percentage' '50'
	config_get config_overwrite "$cfg" config_overwrite 1
	config_get nice "$cfg" nice "0"
	config_get ionice_flags "$cfg" ionice_flags ''
	
	case $(echo "$config_dir"|grep -oE "^/[^/]+") in
	"/var"|"/tmp"|"/mnt"|"/root"|"/home")
		true
	;;
	*)
		echo "You should set config_dir to subfolders under /var, /tmp ,/mnt or /root"
		return 1
	;;
	esac
	
	which ionice > /dev/null || ionice_flags=''

	_make_dir "$incoming_dir" "$temp_dir" "$config_dir" || {
		_err "Can't create dirs: ${incoming_dir}, ${temp_dir}, ${config_dir}"
		return 1
	}

	_reset_dir_mode "$incoming_dir" "$temp_dir" "$config_dir"

	if [ -n "$user" ]; then
		if ( user_exists "$user" && _change_owner "$user" "$incoming_dir" "$temp_dir" "$config_dir" ); then
			_info "amule will run with user '$user'."
		else
			_info "Setting run user to '$user' failed, default user will be used."
			user=root
		fi
	fi

	touch "$config_file" "$config_dir/addresses.dat" "$config_dir/shareddir.dat" "$config_dir/ipfilter_static.dat"

	config_file="$config_dir/amule.conf"
	[ -d "$config_dir/.aMule" ] || ln -s ./ $config_dir/.aMule

	touch "$config_file"
	write_dat_file /etc/amule/addresses.dat "$config_dir/addresses.dat"
	write_dat_file /etc/amule/shareddir.dat "$config_dir/shareddir.dat"
	write_dat_file /etc/amule/ipfilter_static.dat "$config_dir/ipfilter_static.dat"

	#[ "$config_overwrite" == 0 ] || {
		set_params "$cfg" $(uci show amule|awk -F'[.=]' '{print $3}'|tr '\n' ' ')
	#}
	
	HOME="$config_dir" /usr/bin/amulecmd --create-config-from="$config_file"
	
	cmdline="/usr/bin/amuled -c $config_dir"
	[ "$ionice_flags" ] && cmdline="ionice $ionice_flags $cmdline"
	procd_open_instance
	procd_set_param command $cmdline
	procd_set_param respawn
	procd_append_param limits core="0 0"

	if [ "$mem_percentage" -gt "0" ] ; then
		local mem_total="$(awk '/MemTotal/ {print $2}' /proc/meminfo)"
		if [ -n "$mem_total" ] ; then
			local use_mem="$(expr $mem_total \* $mem_percentage \* 10)"
			procd_append_param limits as="$use_mem $use_mem"
		fi
	fi

	procd_set_param user "$user"
	procd_set_param nice "$nice"


	procd_add_jail amule log
	procd_add_jail_mount /usr/bin/amulecmd /usr/bin/amuleweb /usr/share/amule/
	procd_add_jail_mount_rw "$config_dir" "$incoming_dir" "$temp_dir"
	procd_close_instance
}

start_service() {
	config_load "amule"
	config_foreach amule_start "amule"
}

boot() {
	(sleep 30 && start >/dev/null 2>&1) &
	return 0
}

service_triggers() {
	procd_add_reload_trigger "amule"
}

reload_service() {
	restart
}

restart() {
	stop
	sleep 2
	start
}

